{"ast":null,"code":"var _jsxFileName = \"/home/will/Documents/Cloudflare/react/frontend/src/components/posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await fetch(\"https://serverless-api.wyw6.workers.dev/api/posts\");\n      const postsResp = await resp.json();\n      setPosts(postsResp);\n    };\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dalio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"p-5 mb-4 bg-light rounded-3\",\n            children: /*#__PURE__*/_jsxDEV(ExampleToast, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\n\nconst ExampleToast = _ref => {\n  _s2();\n\n  let {\n    post\n  } = _ref;\n  const [show, toggleShow] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Toast, {\n      show: show,\n      onClose: () => toggleShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        style: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"11px\"\n          },\n          children: [daysFromToday(post.published_at), \" days ago\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), post.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(ExampleToast, \"sjyyMBiKq0YNTUf6zAJiZcCurDg=\");\n\n_c2 = ExampleToast;\n\nconst CreatePost = () => {\n  _s3();\n\n  const [showForm, showFormSet] = useState(false);\n\n  const onClick = () => {\n    showFormSet(true ^ showForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      show: showForm,\n      variant: \"success\",\n      className: \"mr-1\",\n      onClick: onClick,\n      children: \"Share a new thought\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(CreatePost, \"p6Kf6djNnubfjP6BREep9Ps8LVw=\");\n\n_c3 = CreatePost;\n\nconst PostForm = () => {\n  _s4();\n\n  const [title, setTitle] = useState(),\n        onInput = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    return setTitle(value);\n  };\n\n  const [text, setText] = useState(),\n        onInput2 = _ref3 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n    return setText(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"30%\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: onInput,\n          value: title,\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: onInput2,\n          value: text,\n          name: \"text\",\n          type: \"text\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: createPost(title, text),\n      children: \"Submit form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(PostForm, \"zsAdJy3/oL987vQAuvEVSrW8cwU=\");\n\n_c4 = PostForm;\n\nfunction daysFromToday(posted) {\n  var today = Date.now();\n  var parsed = Date.parse(posted);\n  var time_difference = new Date(today - parsed);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: time_difference.getDay()\n  }, void 0, false);\n}\n\nfunction randomID() {\n  const min_id = 0;\n  const max_id = 2 ** 10;\n  return Math.floor(Math.random(min_id, max_id));\n}\n\nfunction createPost(title, text) {\n  console.log(title, text);\n\n  if (!title) {\n    title = \"I forgot to make a title :(\";\n  }\n\n  if (!text) {\n    title = \"I am at a loss for words\";\n  }\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: randomID(),\n      title: title,\n      text: text,\n      published_at: Date.now().toString()\n    })\n  };\n  fetch(\"https://serverless-api.wyw6.workers.dev/api/posts\", requestOptions).then(response => response.json());\n}\n\nexport default Posts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"ExampleToast\");\n$RefreshReg$(_c3, \"CreatePost\");\n$RefreshReg$(_c4, \"PostForm\");","map":{"version":3,"sources":["/home/will/Documents/Cloudflare/react/frontend/src/components/posts.js"],"names":["React","useEffect","useState","Link","Form","Toast","Container","Button","Posts","posts","setPosts","getPosts","resp","fetch","postsResp","json","textAlign","map","post","id","ExampleToast","show","toggleShow","fontSize","title","daysFromToday","published_at","text","CreatePost","showForm","showFormSet","onClick","PostForm","setTitle","onInput","target","value","setText","onInput2","width","margin","createPost","posted","today","Date","now","parsed","parse","time_difference","getDay","randomID","min_id","max_id","Math","floor","random","console","log","requestOptions","method","headers","body","JSON","stringify","toString","then","response"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport Form from 'react-bootstrap/Form'\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await fetch(\n        \"https://serverless-api.wyw6.workers.dev/api/posts\"\n      );\n      const postsResp = await resp.json();\n      setPosts(postsResp);\n    };\n\n    getPosts();\n  }, []);\n  return (\n    <body >\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Dalio</h1>\n        <CreatePost></CreatePost>\n        {posts.map((post) => (\n          <div key={post.id} >\n            <Container className=\"p-3\">\n              <Container className=\"p-5 mb-4 bg-light rounded-3\">\n                <ExampleToast post={post}>\n                </ExampleToast>\n              </Container>\n            </Container>\n          </div>\n\n        ))}\n      </div>\n    </body>\n\n  );\n};\n\nconst ExampleToast = ({ post }) => {\n  const [show, toggleShow] = useState(true);\n\n  return (\n    <>\n      <Toast show={show} onClose={() => toggleShow(false)}>\n        <Toast.Header>\n          <strong style={{ fontSize: \"15px\" }}>{post.title}</strong>\n        </Toast.Header>\n\n        <Toast.Body style={{ textAlign: \"left\" }}>\n          <p style={{ fontSize: \"11px\" }}>{daysFromToday(post.published_at)} days ago</p>\n          {post.text}\n        </Toast.Body>\n      </Toast>\n    </>\n  );\n};\n\nconst CreatePost = () => {\n  const [showForm, showFormSet] = useState(false);\n  const onClick = () => { showFormSet(true ^ showForm) }\n  return (\n    <div>\n      <Button show={showForm} variant=\"success\" className=\"mr-1\" onClick={onClick}>\n        Share a new thought\n      </Button>\n      { showForm ? <PostForm /> : null}\n    </div>\n  );\n}\n\n\nconst PostForm = () => {\n  const [title, setTitle] = useState(),\n    onInput = ({ target: { value } }) => setTitle(value);\n  const [text, setText] = useState(),\n    onInput2 = ({ target: { value } }) => setText(value);\n\n\n  return (\n    <div>\n      <Form style={{ width: \"30%\", margin: \"auto\" }} >\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n          <Form.Control onChange={onInput} value={title} name=\"title\" type=\"text\" placeholder=\"Title\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n          <Form.Control onChange={onInput2} value={text} name=\"text\" type=\"text\" placeholder=\"Title\" />\n        </Form.Group>\n      </Form>\n      <Button type=\"submit\" onClick={createPost(title, text)}>Submit form</Button>\n    </div>\n  );\n}\n\nfunction daysFromToday(posted) {\n  var today = Date.now();\n  var parsed = Date.parse(posted);\n  var time_difference = new Date(today - parsed);\n  return (\n    <>\n      {time_difference.getDay()}\n    </>);\n}\n\nfunction randomID() {\n  const min_id = 0;\n  const max_id = 2 ** 10;\n  return Math.floor(Math.random(min_id, max_id));\n}\n\n\nfunction createPost(title, text) {\n  console.log(title, text)\n  if (!title) {\n    title = \"I forgot to make a title :(\"\n  }\n  if (!text) {\n    title = \"I am at a loss for words\"\n  }\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ id: randomID(), title: title, text: text, published_at: Date.now().toString() })\n  };\n  fetch(\"https://serverless-api.wyw6.workers.dev/api/posts\", requestOptions)\n    .then(response => response.json())\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}