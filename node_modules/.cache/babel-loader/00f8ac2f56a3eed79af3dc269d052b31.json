{"ast":null,"code":"var _jsxFileName = \"/home/will/Documents/Cloudflare/react/frontend/src/components/posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await fetch(\"https://serverless-api.wyw6.workers.dev/api/posts\");\n      const postsResp = await resp.json();\n      setPosts(postsResp);\n    };\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dalio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"p-5 mb-4 bg-light rounded-3\",\n            children: /*#__PURE__*/_jsxDEV(ExampleToast, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\n\nconst ExampleToast = _ref => {\n  _s2();\n\n  let {\n    post\n  } = _ref;\n  const [show, toggleShow] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"toast\",\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"toast-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        class: \"mr-auto\",\n        children: \"Bootstrap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        class: \"text-muted\",\n        children: \"2 seconds ago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"ml-2 mb-1 close\",\n        \"data-dismiss\": \"toast\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"toast-body\",\n      children: \"Heads up, toasts will stack automatically\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ExampleToast, \"sjyyMBiKq0YNTUf6zAJiZcCurDg=\");\n\n_c2 = ExampleToast;\n\nconst CreatePost = () => {\n  _s3();\n\n  const [showForm, showFormSet] = useState(false);\n\n  const onClick = () => {\n    showFormSet(true ^ showForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      show: showForm,\n      variant: \"success\",\n      className: \"mr-1\",\n      onClick: onClick,\n      children: \"Share a new thought\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(CreatePost, \"p6Kf6djNnubfjP6BREep9Ps8LVw=\");\n\n_c3 = CreatePost;\n\nconst PostForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"30%\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"text\",\n          type: \"text\",\n          placeholder: \"My\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: createPost(),\n      children: \"Submit form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = PostForm;\n\nfunction daysFromToday(posted) {\n  var today = Date.now();\n  var parsed = Date.parse(posted);\n  var time_difference = new Date(today - parsed);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: time_difference.getDay()\n  }, void 0, false);\n}\n\nfunction randomID() {\n  const max_id = 2 ** 10;\n  return Math.floor(Math.random() * max_id);\n}\n\nfunction createPost() {\n  var title = \"test\";\n  var text = \"test text\";\n\n  if (!title) {\n    title = \"I forgot to make a title :(\";\n  }\n\n  if (!text) {\n    title = \"I am at a loss for words\";\n  }\n\n  const body = JSON.stringify({\n    id: randomID(),\n    title: title,\n    text: text,\n    published_at: Date.now().toString()\n  });\n  fetch(\"https://serverless-api.wyw6.workers.dev/api/posts/?\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: body\n  });\n  console.log(body);\n}\n\nexport default Posts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"ExampleToast\");\n$RefreshReg$(_c3, \"CreatePost\");\n$RefreshReg$(_c4, \"PostForm\");","map":{"version":3,"sources":["/home/will/Documents/Cloudflare/react/frontend/src/components/posts.js"],"names":["React","useEffect","useState","Link","Form","Toast","Container","Button","Posts","posts","setPosts","getPosts","resp","fetch","postsResp","json","textAlign","map","post","id","ExampleToast","show","toggleShow","CreatePost","showForm","showFormSet","onClick","PostForm","width","margin","createPost","daysFromToday","posted","today","Date","now","parsed","parse","time_difference","getDay","randomID","max_id","Math","floor","random","title","text","body","JSON","stringify","published_at","toString","method","headers","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport Form from 'react-bootstrap/Form'\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await fetch(\n        \"https://serverless-api.wyw6.workers.dev/api/posts\"\n      );\n      const postsResp = await resp.json();\n      setPosts(postsResp);\n    };\n\n    getPosts();\n  }, []);\n  return (\n    <body >\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Dalio</h1>\n        <CreatePost></CreatePost>\n        {posts.map((post) => (\n          <div key={post.id} >\n            <Container className=\"p-3\">\n              <Container className=\"p-5 mb-4 bg-light rounded-3\">\n                <ExampleToast post={post}>\n                </ExampleToast>\n              </Container>\n            </Container>\n          </div>\n\n        ))}\n      </div>\n    </body>\n\n  );\n};\n\nconst ExampleToast = ({ post }) => {\n  const [show, toggleShow] = useState(true);\n\n  return (\n    <div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"toast-header\">\n        <strong class=\"mr-auto\">Bootstrap</strong>\n        <small class=\"text-muted\">2 seconds ago</small>\n        <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"toast-body\">\n        Heads up, toasts will stack automatically\n        </div>\n    </div>\n  );\n};\n\nconst CreatePost = () => {\n  const [showForm, showFormSet] = useState(false);\n  const onClick = () => { showFormSet(true ^ showForm) }\n  return (\n    <div>\n      <Button show={showForm} variant=\"success\" className=\"mr-1\" onClick={onClick}>\n        Share a new thought\n      </Button>\n      {showForm ? <PostForm /> : null}\n    </div>\n  );\n}\n\n\nconst PostForm = () => {\n  return (\n    <div>\n      <Form style={{ width: \"30%\", margin: \"auto\" }} >\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n          <Form.Control name=\"title\" type=\"text\" placeholder=\"Title\" />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n          <Form.Control name=\"text\" type=\"text\" placeholder=\"My\" />\n        </Form.Group>\n      </Form>\n      <Button type=\"submit\" onClick={createPost()}>Submit form</Button>\n    </div>\n  );\n}\n\nfunction daysFromToday(posted) {\n  var today = Date.now();\n  var parsed = Date.parse(posted);\n  var time_difference = new Date(today - parsed);\n  return (\n    <>\n      {time_difference.getDay()}\n    </>);\n}\n\nfunction randomID() {\n  const max_id = 2 ** 10;\n  return Math.floor(Math.random() * max_id);\n}\n\n\nfunction createPost() {\n  var title = \"test\"\n  var text = \"test text\"\n  if (!title) {\n    title = \"I forgot to make a title :(\"\n  }\n  if (!text) {\n    title = \"I am at a loss for words\"\n  }\n  const body = JSON.stringify({ id: randomID(), title: title, text: text, published_at: Date.now().toString() })\n\n  fetch(\"https://serverless-api.wyw6.workers.dev/api/posts/?\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: body\n  })\n  console.log(body);\n\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}