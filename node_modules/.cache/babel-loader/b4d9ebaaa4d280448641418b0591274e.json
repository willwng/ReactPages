{"ast":null,"code":"var _jsxFileName = \"/home/will/Documents/Cloudflare/react/frontend/src/components/posts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await fetch(\"https://serverless-api.wyw6.workers.dev/api/posts\");\n      const postsResp = await resp.json();\n      setPosts(postsResp);\n    };\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dalio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"p-5 mb-4 bg-light rounded-3\",\n            children: /*#__PURE__*/_jsxDEV(ExampleToast, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\n\nconst ExampleToast = _ref => {\n  _s2();\n\n  let {\n    post\n  } = _ref;\n  const [show, toggleShow] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Toast, {\n      show: show,\n      onClose: () => toggleShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"11px\"\n          },\n          children: [daysFromToday(post.published_at), \" days ago\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), post.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(ExampleToast, \"sjyyMBiKq0YNTUf6zAJiZcCurDg=\");\n\n_c2 = ExampleToast;\n\nconst CreatePost = () => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"success\",\n    className: \"mr-1\",\n    children: \"Share a new thought\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CreatePost;\n\nconst PostForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Thoughts:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = PostForm;\n\nfunction daysFromToday(posted) {\n  var today = Date.now();\n  var parsed = Date.parse(posted);\n  var time_difference = new Date(today - parsed);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: time_difference.getDay()\n  }, void 0, false);\n}\n\nexport default Posts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"ExampleToast\");\n$RefreshReg$(_c3, \"CreatePost\");\n$RefreshReg$(_c4, \"PostForm\");","map":{"version":3,"sources":["/home/will/Documents/Cloudflare/react/frontend/src/components/posts.js"],"names":["React","useEffect","useState","Link","Toast","Container","Button","Posts","posts","setPosts","getPosts","resp","fetch","postsResp","json","textAlign","map","post","id","ExampleToast","show","toggleShow","fontSize","title","daysFromToday","published_at","text","CreatePost","PostForm","posted","today","Date","now","parsed","parse","time_difference","getDay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const resp = await fetch(\n        \"https://serverless-api.wyw6.workers.dev/api/posts\"\n      );\n      const postsResp = await resp.json();\n      setPosts(postsResp);\n    };\n\n    getPosts();\n  }, []);\n  return (\n    <body >\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Dalio</h1>\n        <CreatePost></CreatePost>\n        <PostForm></PostForm>\n        {posts.map((post) => (\n          <div key={post.id} >\n            <Container className=\"p-3\">\n              <Container className=\"p-5 mb-4 bg-light rounded-3\">\n                <ExampleToast post={post}>\n                </ExampleToast>\n              </Container>\n            </Container>\n          </div>\n\n        ))}\n      </div>\n    </body>\n\n  );\n};\n\nconst ExampleToast = ({ post }) => {\n  const [show, toggleShow] = useState(true);\n\n  return (\n    <>\n      <Toast show={show} onClose={() => toggleShow(false)}>\n        <Toast.Header>\n          <strong style={{ fontSize: \"15px\" }}>{post.title}</strong>\n        </Toast.Header>\n\n        <Toast.Body>\n          <p style={{ fontSize: \"11px\" }}>{daysFromToday(post.published_at)} days ago</p>\n          {post.text}\n        </Toast.Body>\n      </Toast>\n    </>\n  );\n};\n\nconst CreatePost = () => {\n  return (\n    <Button variant=\"success\" className=\"mr-1\">\n      Share a new thought\n    </Button>\n  );\n}\n\nconst PostForm = () => {\n  return (\n    <form>\n      <label>\n        Title:\n    <input type=\"text\" name=\"title\" />\n      </label>\n      <br></br>\n      <label>\n        Thoughts:\n    <input type=\"text\" name=\"text\" />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nfunction daysFromToday(posted) {\n  var today = Date.now();\n  var parsed = Date.parse(posted);\n  var time_difference = new Date(today - parsed);\n  return (\n    <>\n      {time_difference.getDay()}\n    </>);\n}\n\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}