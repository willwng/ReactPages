[{"/home/will/Documents/Cloudflare/general/pages/src/index.js":"1","/home/will/Documents/Cloudflare/general/pages/src/App.js":"2","/home/will/Documents/Cloudflare/general/pages/src/reportWebVitals.js":"3","/home/will/Documents/Cloudflare/general/pages/src/components/post.js":"4","/home/will/Documents/Cloudflare/general/pages/src/components/posts.js":"5","/home/will/Documents/Cloudflare/general/pages/src/components/navbar.js":"6","/home/will/Documents/Cloudflare/general/pages/src/components/postform.js":"7"},{"size":548,"mtime":1636858216151,"results":"8","hashOfConfig":"9"},{"size":258,"mtime":1636841124826,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1636840102701,"results":"11","hashOfConfig":"9"},{"size":739,"mtime":1636841475973,"results":"12","hashOfConfig":"9"},{"size":2359,"mtime":1637031741337,"results":"13","hashOfConfig":"9"},{"size":1189,"mtime":1637031606907,"results":"14","hashOfConfig":"9"},{"size":1934,"mtime":1637031089661,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cmrx2j",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/home/will/Documents/Cloudflare/general/pages/src/index.js",[],["32","33"],"/home/will/Documents/Cloudflare/general/pages/src/App.js",[],"/home/will/Documents/Cloudflare/general/pages/src/reportWebVitals.js",[],"/home/will/Documents/Cloudflare/general/pages/src/components/post.js",[],"/home/will/Documents/Cloudflare/general/pages/src/components/posts.js",["34","35","36"],"/home/will/Documents/Cloudflare/general/pages/src/components/navbar.js",["37"],"/home/will/Documents/Cloudflare/general/pages/src/components/postform.js",["38"],"import Button from 'react-bootstrap/Button';\nimport React, { useEffect, useState } from \"react\";\nimport Modal from 'react-bootstrap/Modal'\nimport { useForm } from \"react-hook-form\";\n\n/**\n * @returns A modal form for submitting thoughts\n */\nconst PostForm = () => {\n  const [show, setShow] = useState(true);\n  const handleClose = () => setShow(false);\n  const { register, handleSubmit } = useForm();\n  // Submit button handling\n  const onSubmit = (data) => {\n    setShow(false);\n    document.getElementById(\"postForm\").reset();\n    createPost(data.title, data.text);\n  }\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Share a Thought!</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <form id=\"postForm\" onSubmit={handleSubmit(onSubmit)}>\n          <input {...register(\"title\")} placeholder=\"Title\" />\n          <input {...register(\"text\")} placeholder=\"My Thoughts\" />\n          <Button type=\"submit\" variant=\"primary\">\n            Share\n            </Button>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\n/**\n * @returns Randomly generated ID\n */\nfunction randomID() {\n  const max_id = 2 ** 10;\n  return Math.floor(Math.random() * max_id);\n}\n\n/**\n * Creates a post request based on input of title and text\n * @param title Title of post (string)\n * @param text Text of post (string)\n */\nfunction createPost(title, text) {\n  // Empty title and text aren't allowed\n  if (!title) {\n    title = \"I forgot to make a title :(\"\n  }\n  if (!text) {\n    text = \"I am at a loss for words\"\n  }\n  // Randomly generate id and get the date\n  const body = JSON.stringify({ id: randomID(), title: title, text: text, published_at: (new Date()).toString() })\n  // Post request!\n  fetch(\"https://serverless-api.wyw6.workers.dev/api/posts\", {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json', },\n    body: body\n  });\n}\n\n\n\nexport default PostForm;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":14},{"ruleId":"43","severity":1,"message":"47","line":10,"column":8,"nodeType":"45","messageId":"46","endLine":10,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":79,"column":16,"nodeType":"50","messageId":"51","endLine":79,"endColumn":36},{"ruleId":"43","severity":1,"message":"52","line":5,"column":17,"nodeType":"45","messageId":"46","endLine":5,"endColumn":26},{"ruleId":"43","severity":1,"message":"52","line":2,"column":17,"nodeType":"45","messageId":"46","endLine":2,"endColumn":26},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PostForm' is defined but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]